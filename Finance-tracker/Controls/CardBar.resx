<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbLargeCard.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>